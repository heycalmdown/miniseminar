doctype html
html
  head
    title= title
    link(rel='stylesheet', href=`/css/reveal.css`)
    link(rel='stylesheet', href=`/css/theme/${theme || 'black'}.css`)#theme
    link(rel='stylesheet', href=`/lib/css/zenburn.css`)
    link(rel='stylesheet', href='https://cdn.rawgit.com/knsv/mermaid/7.0.0/dist/mermaid.css')
    script(src='https://cdn.rawgit.com/knsv/mermaid/7.0.0/dist/mermaid.min.js')
    script(src='https://cdn.rawgit.com/mathiasbynens/he/670991a4/he.js')

  body
    .reveal
      .slides
        each section in sections
          unless section.sections
            section!=section
          else
            section
              each subSection in section.sections
                section!=subSection

    script(src=`/lib/js/head.min.js`)
    script(src=`/js/reveal.js`)
    script.
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        transition: '#{transition || "slide"}', // none/fade/slide/convex/concave/zoom

        // Optional reveal.js plugins
        dependencies: [
         { src: `/lib/js/classList.js`, condition: function() { return !document.body.classList; } },
         { src: `/plugin/highlight/highlight.js`, async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
         { src: `/plugin/zoom-js/zoom.js`, async: true },
         { src: `/plugin/notes/notes.js`, async: true }
        ]
      });
      var nextId = 0;
      function onReadyToRenderMermaid(event) {
        var mermaidContainer = event.currentSlide.getElementsByClassName('mermaid')[0];
        if (!mermaidContainer) return;
        if (mermaidContainer.getAttribute('data-processed')) return;
        mermaidContainer.setAttribute('data-processed', true);
        var text = he.decode(mermaidContainer.innerHTML).trim();

        var chart = document.createElement('div');
        mermaidContainer.appendChild(chart);
        function insertSvg(svgCode, bindFunctions) {
          chart.innerHTML = svgCode;
          chart.firstChild.style.width = chart.getAttribute('viewbox').split(' ')[2] + 'px';
          chart.firstChild.style.height = chart.getAttribute('viewbox').split(' ')[3] + 'px';
          bindFunctions(chart);
        }
        if (!chart.id) {
          chart.id = 'mermaidChart' + nextId++;
          mermaidAPI.render(chart.id, text, insertSvg, mermaidContainer);
        }
        Reveal.layout();
      }
      Reveal.addEventListener('ready', onReadyToRenderMermaid);
      Reveal.addEventListener('slidechanged', onReadyToRenderMermaid);
      mermaid.initialize({startOnLoad: false});
